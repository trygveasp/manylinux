FROM ubuntu:22.04

RUN /bin/bash
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y flex ksh less vim wget libeccodes-dev libnetcdf-dev libhdf5-dev libdigest-sha-perl libxml2-dev libcurl4-openssl-dev liblapack-dev libblas-dev gfortran openmpi-bin libnetcdff-dev cmake bison libopenmpi-dev libeccodes-dev libeccodes-tools

ENV FC="gfortran"
ENV CC="gcc"

## Install Harmonie
ENV hm_rev="/data/Harmonie/"
ENV CMAKE_CONFIG="${hm_rev}/util/cmake/config/config.ubuntu.22.04.GNU.json"
ENV CMAKE_CONFIG_GL="${hm_rev}/util/gl/config/config.ubuntu.22.04.GNU.json"
ENV INSTALL_DIR="/opt/harmonie/"
ENV BUILD_DIR="/data/harmonie-ubuntu-build/"
ENV PATH="${INSTALL_DIR}:${PATH}"

ENV NPROC=8
ENV FP_PRECISION=double

# Install bufr
WORKDIR ${BUILD_DIR}/bufr_405
RUN cmake $hm_rev/util/auxlibs/bufr_405 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCONFIG_FILE=${CMAKE_CONFIG}
RUN cmake --build . -- -j$NPROC
RUN cmake --build . --target install

# Install gribex_370 
WORKDIR ${BUILD_DIR}/gribex_370
RUN cmake $hm_rev/util/auxlibs/gribex_370 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCONFIG_FILE=${CMAKE_CONFIG}
RUN cmake --build . -- -j$NPROC
RUN cmake --build . --target install

# Install rgb_001
WORKDIR ${BUILD_DIR}/rgb_001
RUN cmake $hm_rev/util/auxlibs/rgb_001 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCONFIG_FILE=${CMAKE_CONFIG}
RUN cmake --build . -- -j$NPROC
RUN cmake --build . --target install

# Install dummies_006/mpidummy
WORKDIR ${BUILD_DIR}/dummies_006-mpidummy
RUN cmake $hm_rev/util/auxlibs/dummies_006/mpidummy -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DCONFIG_FILE=${CMAKE_CONFIG}
RUN cmake --build . -- -j$NPROC
RUN cmake --build . --target install

# Configure Harmonie
WORKDIR ${BUILD_DIR}
RUN cmake $hm_rev/src -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=YES -DCONFIG_FILE=${CMAKE_CONFIG}

# Build Harmonie
RUN cmake --build . -- -j$NPROC

# Install Harmonie
RUN cmake --build . --target install -- -j$NPROC
ENV BINDIR="${INSTALL_DIR}/bin"
ENV PATH="${BINDIR}:${PATH}"
RUN cp -p ${BINDIR}/ioassign ${BINDIR}/IOASSIGN
RUN cp -p ${BINDIR}/ODBTOOLS ${BINDIR}/shuffle
RUN cp -p ${BINDIR}/dcagen   ${BINDIR}/dcagen.x
RUN cp -p ${BINDIR}/OFFLINE  ${BINDIR}/SURFEX

WORKDIR ${BUILD_DIR}/build-gl
ENV PATH="${PATH}:/usr/lib64/openmpi/bin/"
RUN cmake $hm_rev/util/gl -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=YES -DCONFIG_FILE=${CMAKE_CONFIG_GL} -Dharmonie_DIR=$INSTALL_DIR/lib/cmake/harmonie
RUN cmake --build . -v
RUN cmake --build . --target install

WORKDIR /data
RUN apt-get -y install python-is-python3 pip
RUN pip install numpy==1.22.1
RUN pip install cartopy six matplotlib netCDF4 h5py eccodes pyyaml

ENV EPY_PATH=/opt/EPyGrAM-1.4.13/
COPY EPyGrAM-1.4.13 /opt/EPyGrAM-1.4.13
ENV PYTHONPATH=$PYTHONPATH:${EPY_PATH}:${EPY_PATH}/site:${EPY_PATH}/epygram
ENV PATH=${EPY_PATH}/apptools:$PATH
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Amsterdam
RUN apt-get -y install python3-tk

COPY Create_dummies.sh /usr/local/bin/Create_dummies
COPY Stat2shared_ubuntu /usr/local/bin/Stat2shared
WORKDIR /data/build_dynamic_lib
RUN Create_dummies_ubuntu

WORKDIR /data

